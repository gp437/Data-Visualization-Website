





    <!-- <script>
// mapboxgl.accessToken = 'pk.eyJ1IjoiZ2FicmllbHBpc2xhciIsImEiOiJjazhmNzNpcHowMTB6M21wZXYwb3Y1YnFnIn0.je6Dg0oNrrFKVMAEPP6rsg';
// var map = new mapboxgl.Map({
// container: 'map',
// style: 'mapbox://styles/mapbox/streets-v11'
// });



mapboxgl.accessToken = 'pk.eyJ1IjoiZ2FicmllbHBpc2xhciIsImEiOiJjazhmNzNpcHowMTB6M21wZXYwb3Y1YnFnIn0.je6Dg0oNrrFKVMAEPP6rsg';
var map = new mapboxgl.Map({
container: 'map',
style: 'mapbox://styles/mapbox/light-v10',
zoom: 10,
center: [  -0.127716, 51.512731]
});
 
map.on('load', function() {
// Sample feature from the `examples.8fgz4egr` tileset:


// map.addSource('ethnicity', {
// type: 'vector',
// : 'sentiment'
// });
map.addLayer({
'id': '1',
'type': 'circle',
'source': 'ethnicity',
'source-layer': 'sf2010',
'paint': {
// make circles larger as the user zooms from z12 to z22
'circle-radius': {
'base': 1.75,
'stops': [[12, 2], [22, 180]]
},
// color circles by ethnicity, using a match expression
// https://docs.mapbox.com/mapbox-gl-js/style-spec/#expressions-match
'circle-color': [
'match',
['get', 'ethnicity'],
'positive',
'#3bd06d',
'neutral',
'#223b53',
'negative',
'#d0453b'
]
}
});
});
</script> -->

    <!-- <script>
    "use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var fs_1 = require("fs");
    var GetDemo;
var dbData = [];

    var idd = 1;
    let boroughX = ["Barking & Dagenham", "Barnet", "Bexley", "Brent", "City of London"];
    let boroughY;
    function BoroughFunc(){
        for (let x = 0;x<1506;x++){
           let id = x;
        // end id
        for (let y = 0;y<6;y++){
            boroughY=boroughX[y-1];



            (function (GetDemo) {
                var AWS = require("aws-sdk");
                AWS.config.update({
                    region: "us-east-1",
                    endpoint: "https://dynamodb.us-east-1.amazonaws.com"
                });
                //Create new DocumentClient
                var documentClient = new AWS.DynamoDB.DocumentClient();
                //Table name and data for table
                var params = {
                    TableName: "HousesAverage",
                    Key: {
                        id: id,
                        borough: boroughY
                    }
                };
                //Retrieve data item from DynamoDB and handle errors
                documentClient.get(params, function (err, data) {
                    if (err) {
                        console.error("Unable to read item");
                        // console.error("Error JSON:", JSON.stringify(err));
                    }
                    else {
                        //  dbData.push(data);
                        //  console.log(dbData);

                        // dbData.push(JSON.stringify(data.Item));
                        if (data.Item != undefined){
                             console.log("Able to read item + defined");
                            // console.log(data.Item.date);

                        }
                        // console.log(data.Item.date);
                    }
                });
            })(GetDemo || (GetDemo = {}));
            //# sourceMappingURL=get_demo.js.map

        }
        //for1
        }
        //for2
           
        
        
    }
    BoroughFunc();
// console.log(dbData[1]);














    let xDate = [];
    // trace1.push.y(222);
    xDate.push(7,11);
    //   //Data set details. Each trace corresponds to one line or set of points.
  let trace1 = {
      x: xDate,
      y: [50000, 100000, 150000, 200000, 250000, 300000, 350000, 400000],
      mode: 'markers',
      name: "First data set",
      marker: {
          color: 'rgb(219, 64, 82)',
          size: 12
      }
  };
  

  //Complete data set for graph
  let data = [ trace1 ];

  //Specify title and axis labels
  let layout = {
      title:'House Prices Average',
      xaxis: {
          title: 'Date'
      },
      yaxis: {
          title: 'Price'
      }
  };


  //Draw graph
  Plotly.newPlot('chartDiv', data, layout);


</script> -->





